package cn.com.jnpc.foreign.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import cn.com.jnpc.foreign.mapperprovider.FiForeignerSqlProvider;
import cn.com.jnpc.foreign.mapperprovider.FiInvitationSqlProvider;
import cn.com.jnpc.foreign.model.FiInvitationExample;
import cn.com.jnpc.foreign.po.FiForeigner;
import cn.com.jnpc.foreign.po.FiInvitation;
import cn.com.jnpc.foreign.vo.PageMybatis;

public interface FiInvitationMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @SelectProvider(type = FiInvitationSqlProvider.class, method = "countByExample")
    int countByExample(FiInvitationExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @DeleteProvider(type = FiInvitationSqlProvider.class, method = "deleteByExample")
    int deleteByExample(FiInvitationExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @Delete({ "delete from FI_INVITATION", "where ID = #{id,jdbcType=NUMERIC}" })
    int deleteByPrimaryKey(int id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @Insert({
	    "insert into FI_INVITATION (ID, INVITATION_ID, ",
	    "FK_ATTACHMENT_ID, IS_USE, ",
	    "STAY_TIME, GOBACK_TIMES, ",
	    "ARRIVED_DATE, LEAVING_DATE, ",
	    "STATUS, CREATE_DATE, ",
	    "EDIT_DATE, CREATE_USER, ",
	    "EDIT_USER)",
	    "values (#{id,jdbcType=NUMERIC}, #{invitationId,jdbcType=VARCHAR}, ",
	    "#{fkAttachmentId,jdbcType=VARCHAR}, #{isUse,jdbcType=NUMERIC}, ",
	    "#{stayTime,jdbcType=VARCHAR}, #{gobackTimes,jdbcType=VARCHAR}, ",
	    "#{arrivedDate,jdbcType=TIMESTAMP}, #{leavingDate,jdbcType=TIMESTAMP}, ",
	    "#{status,jdbcType=NUMERIC}, #{createDate,jdbcType=TIMESTAMP}, ",
	    "#{editDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, ",
	    "#{editUser,jdbcType=VARCHAR})" })
    @SelectKey(before = true, keyProperty = "id", resultType = Integer.class, statement = "select invitation_sequence.nextval from dual")
    int insert(FiInvitation record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @InsertProvider(type = FiInvitationSqlProvider.class, method = "insertSelective")
    int insertSelective(FiInvitation record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @SelectProvider(type = FiInvitationSqlProvider.class, method = "selectByExample")
    @Results({
	    @Result(column = "ID", property = "id", jdbcType = JdbcType.NUMERIC, id = true),
	    @Result(column = "INVITATION_ID", property = "invitationId", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "FK_ATTACHMENT_ID", property = "fkAttachmentId", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "IS_USE", property = "isUse", jdbcType = JdbcType.NUMERIC),
	    @Result(column = "STAY_TIME", property = "stayTime", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "GOBACK_TIMES", property = "gobackTimes", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "ARRIVED_DATE", property = "arrivedDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "LEAVING_DATE", property = "leavingDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "STATUS", property = "status", jdbcType = JdbcType.NUMERIC),
	    @Result(column = "CREATE_DATE", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "EDIT_DATE", property = "editDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "CREATE_USER", property = "createUser", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "EDIT_USER", property = "editUser", jdbcType = JdbcType.VARCHAR) })
    List<FiInvitation> selectByExample(FiInvitationExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @Select({
	    "select",
	    "ID, INVITATION_ID, FK_ATTACHMENT_ID, IS_USE, STAY_TIME, GOBACK_TIMES, ARRIVED_DATE, ",
	    "LEAVING_DATE, STATUS, CREATE_DATE, EDIT_DATE, CREATE_USER, EDIT_USER",
	    "from FI_INVITATION", "where ID = #{id,jdbcType=NUMERIC}" })
    @Results({
	    @Result(column = "ID", property = "id", jdbcType = JdbcType.NUMERIC, id = true),
	    @Result(column = "INVITATION_ID", property = "invitationId", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "FK_ATTACHMENT_ID", property = "fkAttachmentId", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "IS_USE", property = "isUse", jdbcType = JdbcType.NUMERIC),
	    @Result(column = "STAY_TIME", property = "stayTime", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "GOBACK_TIMES", property = "gobackTimes", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "ARRIVED_DATE", property = "arrivedDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "LEAVING_DATE", property = "leavingDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "STATUS", property = "status", jdbcType = JdbcType.NUMERIC),
	    @Result(column = "CREATE_DATE", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "EDIT_DATE", property = "editDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "CREATE_USER", property = "createUser", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "EDIT_USER", property = "editUser", jdbcType = JdbcType.VARCHAR) })
    FiInvitation selectByPrimaryKey(int id);

    @SelectProvider(type = FiInvitationSqlProvider.class, method = "selectByPage")
    @Results({
	    @Result(column = "ID", property = "id", jdbcType = JdbcType.NUMERIC, id = true),
	    @Result(column = "INVITATION_ID", property = "invitationId", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "FK_ATTACHMENT_ID", property = "fkAttachmentId", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "IS_USE", property = "isUse", jdbcType = JdbcType.NUMERIC),
	    @Result(column = "STAY_TIME", property = "stayTime", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "GOBACK_TIMES", property = "gobackTimes", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "ARRIVED_DATE", property = "arrivedDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "LEAVING_DATE", property = "leavingDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "STATUS", property = "status", jdbcType = JdbcType.NUMERIC),
	    @Result(column = "CREATE_DATE", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "EDIT_DATE", property = "editDate", jdbcType = JdbcType.TIMESTAMP),
	    @Result(column = "CREATE_USER", property = "createUser", jdbcType = JdbcType.VARCHAR),
	    @Result(column = "EDIT_USER", property = "editUser", jdbcType = JdbcType.VARCHAR) })
    List<FiInvitation> selectByPage(PageMybatis page);

    @SelectProvider(type = FiInvitationSqlProvider.class, method = "selectAllcount")
    @Results({ @Result(column = "ALLCOUNT", property = "allcount", jdbcType = JdbcType.DECIMAL), })
    PageMybatis selectAllCount(String where);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @UpdateProvider(type = FiInvitationSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FiInvitation record,
	    @Param("example") FiInvitationExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @UpdateProvider(type = FiInvitationSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") FiInvitation record,
	    @Param("example") FiInvitationExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @UpdateProvider(type = FiInvitationSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FiInvitation record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table FI_INVITATION
     * 
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    @Update({ "update FI_INVITATION",
	    "set INVITATION_ID = #{invitationId,jdbcType=VARCHAR},",
	    "FK_ATTACHMENT_ID = #{fkAttachmentId,jdbcType=VARCHAR},",
	    "IS_USE = #{isUse,jdbcType=NUMERIC},",
	    "STAY_TIME = #{stayTime,jdbcType=VARCHAR},",
	    "GOBACK_TIMES = #{gobackTimes,jdbcType=VARCHAR},",
	    "ARRIVED_DATE = #{arrivedDate,jdbcType=TIMESTAMP},",
	    "LEAVING_DATE = #{leavingDate,jdbcType=TIMESTAMP},",
	    "STATUS = #{status,jdbcType=NUMERIC},",
	    "CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},",
	    "EDIT_DATE = #{editDate,jdbcType=TIMESTAMP},",
	    "CREATE_USER = #{createUser,jdbcType=VARCHAR},",
	    "EDIT_USER = #{editUser,jdbcType=VARCHAR}",
	    "where ID = #{id,jdbcType=NUMERIC}" })
    int updateByPrimaryKey(FiInvitation record);
}